{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\PlayerComponent.svelte",
    "..\\..\\PlayerIcon.svelte",
    "..\\..\\Vitalbar.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import PlayerComponent from './PlayerComponent.svelte';\n    // Name will also be used to locate icon\n\n    let selectedIndex = -1;\n    let bShiftKeyDown = false;\n\n    let heroes = [\n        {\n            name: 'Cyphina',\n            hitpoints: 100,\n            maxHitpoints: 100,\n            mana: 100,\n            maxMana: 100,\n            bSelected: false,\n        },\n        {\n            name: 'Kitty',\n            hitpoints: 100,\n            maxHitpoints: 100,\n            mana: 100,\n            maxMana: 100,\n            bSelected: false,\n        },\n        {\n            name: 'Emelyene',\n            hitpoints: 100,\n            maxHitpoints: 100,\n            mana: 100,\n            maxMana: 100,\n            bSelected: false,\n        },\n        {\n            name: 'Sylphia',\n            hitpoints: 100,\n            maxHitpoints: 100,\n            mana: 100,\n            maxMana: 100,\n            bSelected: false,\n        },\n    ];\n\n    const handleSelect = e => {\n        let newSelectedIndex = e.detail;\n        if (!bShiftKeyDown) {\n            for (let i = 0; i < heroes.length; ++i) {\n                heroes[i].bSelected = false;\n            }\n        }\n        heroes[newSelectedIndex].bSelected = bShiftKeyDown ? !heroes[newSelectedIndex].bSelected : true;\n        blu_event('selectHero', '{\"value\":' + newSelectedIndex + '}');\n        heroes = heroes;\n    };\n\n    const handleKeyDown = e => {\n        if (e.key == 'Shift') bShiftKeyDown = true;\n    };\n\n    const handleKeyUp = e => {\n        if (e.key == 'Shift') bShiftKeyDown = false;\n    };\n\n    // Update all the heroes when replacing a party\n    window.updatePartyInfo = function(newData) {\n        heroes = newData;\n    };\n\n    // Update a hero by passing an object with an index (heroIndex) and new values (updatedHeroData)\n    window.updateHeroInfo = function(newData) {\n        const key = 'heroIndex' in newData ? newData.heroIndex : newData.name; // If there is no property heroIndex, we'll search by name\n        console.log(key);\n        if (isNaN(key)) {\n            let index = heroes.findIndex(hero => hero.name === key);\n            heroes[index] = { ...heroes[index], ...newData };\n        } else {\n            heroes[key] = { ...heroes[key], ...newData };\n        }\n    };\n\n    window.updateDeselectAllHeroes = function(newData) {\n        heroes.forEach(hero => (hero.bSelected = false));\n        heroes = heroes;\n    };\n\n    window.updateHeroToggleDeselect = function(newData) {\n        if ('name' in newData) {\n            let index = heroes.findIndex(hero => hero.name === newData.name);\n            heroes[index].bSelected = false;\n        }\n    };\n\n    window.updateSingleHeroSelect = function(newData) {\n        if ('name' in newData) {\n            let index = heroes.findIndex(hero => hero.name === newData.name);\n            heroes.forEach(hero => (hero.bSelected = false));\n            heroes[index].bSelected = true;\n        }\n    };\n\n    window.updateSingleHeroToggleSelect = function(newData) {\n        if ('name' in newData) {\n            let index = heroes.findIndex(hero => hero.name === newData.name);\n            heroes[index].bSelected = true;\n        }\n    };\n\n    window.updateHeroHealthInfo = function(newData) {\n        if ('name' in newData) {\n            let index = heroes.findIndex(hero => hero.name === newData.name);\n            heroes[index].hitpoints = newData.hitpoints;\n        }\n    };\n\n    window.updateHeroManaInfo= function(newData) {\n        if ('name' in newData) {\n            let index = heroes.findIndex(hero => hero.name === newData.name);\n            heroes[index].mana = newData.mana;\n        }\n    };\n\n    window.updateHeroMaxHealthInfo = function(newData) {\n        if ('name' in newData) {\n            let index = heroes.findIndex(hero => hero.name === newData.name);\n            heroes[index].maxHitpoints = newData.maxHitpoints;\n        }\n    };\n\n    window.updateHeroMaxManaInfo = function(newData) {\n        if ('name' in newData) {\n            let index = heroes.findIndex(hero => hero.name === newData.name);\n            heroes[index].maxMana = newData.maxMana;\n        }\n    };\n</script>\n\n<svelte:window on:keydown=\"{handleKeyDown}\" on:keyup=\"{handleKeyUp}\" />\n\n<main>\n    <div class=\"heroContainer\">\n        {#each heroes as hero, index}\n            <PlayerComponent {...hero} {index} on:select=\"{e => handleSelect(e)}\" />\n        {/each}\n    </div>\n</main>\n\n<style>\n    main {\n        box-sizing: border-box;\n    }\n\n    .heroContainer {\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n    }\n</style>\n",
    "<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    import { scale } from 'svelte/transition';\r\n    import { quintOut } from 'svelte/easing';\r\n    import PlayerIcon from './PlayerIcon.svelte';\r\n    import Vitalbar from './Vitalbar.svelte';\r\n\r\n    let dispatch = createEventDispatcher();\r\n\r\n    export let index;\r\n    export let name;\r\n    export let hitpoints;\r\n    export let maxHitpoints;\r\n    export let mana;\r\n    export let maxMana;\r\n    export let bSelected;\r\n\r\n    const handleSelect = e => {\r\n        dispatch('select', index);\r\n    };\r\n</script>\r\n\r\n{#if !bSelected}\r\n    <div class=\"unselectedComponent\" in:scale=\"{{ duration: 500, start: 1.3, easing: quintOut }}\">\r\n        <PlayerIcon {name} {bSelected} on:select=\"{e => handleSelect(e)}\" />\r\n        <Vitalbar vital=\"{hitpoints}\" maxVital=\"{maxHitpoints}\" color=\"red\" />\r\n        <Vitalbar vital=\"{mana}\" maxVital=\"{maxMana}\" color=\"blue\" />\r\n    </div>\r\n{:else}\r\n    <div class=\"player\" in:scale=\"{{ duration: 500, start: 0.5, easing: quintOut }}\">\r\n        <PlayerIcon {name} {bSelected} on:select=\"{e => handleSelect(e)}\" />\r\n        <div class=\"info\">\r\n            <div class=\"name\">\r\n                <span>{name}</span>\r\n            </div>\r\n            <div class=\"hitpoints\">\r\n                <span>{hitpoints}/{maxHitpoints}</span>\r\n                <Vitalbar vital=\"{hitpoints}\" maxVital=\"{maxHitpoints}\" color=\"red\" />\r\n            </div>\r\n            <div class=\"mana\">\r\n                <span>{mana}/{maxMana}</span>\r\n                <Vitalbar vital=\"{mana}\" maxVital=\"{maxMana}\" color=\"blue\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .player {\r\n        color: #0c2e33;\r\n        width: 100%;\r\n        margin: 10px 0 10px 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        box-sizing: border-box;\r\n    }\r\n    .info {\r\n        margin: 0 5px;\r\n        flex: 1;\r\n        user-select: none;\r\n        font-family: 'Comic Sans MS', cursive;\r\n\t\tfont-size: 1em;\r\n    }\r\n    .unselectedComponent {\r\n        width: 75px;\r\n        margin: 0 12.5px;\r\n    }\r\n</style>\r\n",
    "<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    let dispatch = createEventDispatcher();\r\n\r\n    export let name; // Used to get filepath to image\r\n    export let bSelected;\r\n    const imgFolder = './images/';\r\n    $: imgPath = imgFolder + name + '.png';\r\n\r\n    const handleSelect = e => {\r\n        dispatch('select', e);\r\n    };\r\n</script>\r\n\r\n<div class=\"icon\" class:bSelected on:click=\"{e => handleSelect(e)}\">\r\n    <img src=\"{imgPath}\" alt=\"Missing Player Icon!\" />\r\n</div>\r\n\r\n<style>\r\n    img {\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: contain;\r\n    }\r\n    .icon {\r\n        width: 80px;\r\n        height: 80px;\r\n        border-radius: 50%;\r\n        border: 2px solid;\r\n        border-color: black;\r\n        box-shadow: 0px 0px 12px rgba(123, 104, 238, 0.7);\r\n        overflow: hidden;\r\n    }\r\n    .icon:hover {\r\n        box-shadow: 0px 0px 12px rgba(87, 4, 104, 0.904);\r\n    }\r\n    .icon.bSelected {\r\n        width: 100px;\r\n        height: 100px;\r\n    }\r\n</style>\r\n",
    "<script>\r\n    export let vital;\r\n    export let maxVital;\r\n    export let color;\r\n\r\n    $: percentVital = maxVital > 0 ? Math.floor((100 * vital) / maxVital) : 0;\r\n</script>\r\n\r\n<div class=\"progressbar\" >\r\n    <div class=\"bar {color}\" style=\"width: {percentVital}%\"></div>\r\n</div>\r\n\r\n<style>\r\n    .progressbar {\r\n        position: relative;\r\n        margin: 5px;\r\n        width: 100%;\r\n        height: 5px;\r\n        background: #e1e1e1;\r\n        border-radius: 2px;\r\n        overflow: hidden;\r\n        box-shadow: 0px 0px 12px rgba(123, 104, 238, 0.7);\r\n    }\r\n    .progressbar .bar {\r\n        height: 100%;\r\n        background: #212121;\r\n    }\r\n    .bar.blue {\r\n        background: #00a8c5;\r\n    }\r\n    .bar.red {\r\n        background: #be5869;\r\n    }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AAkJI,IAAI,cAAC,CAAC,AACF,UAAU,CAAE,UAAU,AAC1B,CAAC,AAED,cAAc,cAAC,CAAC,AACZ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,UAAU,AAC/B,CAAC;AC7GD,OAAO,cAAC,CAAC,AACL,KAAK,CAAE,OAAO,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CACrB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,UAAU,CAAE,UAAU,AAC1B,CAAC,AACD,KAAK,cAAC,CAAC,AACH,MAAM,CAAE,CAAC,CAAC,GAAG,CACb,IAAI,CAAE,CAAC,CACP,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,eAAe,CAAC,CAAC,OAAO,CAC3C,SAAS,CAAE,GAAG,AACZ,CAAC,AACD,oBAAoB,cAAC,CAAC,AAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,MAAM,AACpB,CAAC;AC9CD,GAAG,cAAC,CAAC,AACD,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,OAAO,AACvB,CAAC,AACD,KAAK,cAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,YAAY,CAAE,KAAK,CACnB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACjD,QAAQ,CAAE,MAAM,AACpB,CAAC,AACD,mBAAK,MAAM,AAAC,CAAC,AACT,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,AACpD,CAAC,AACD,KAAK,UAAU,cAAC,CAAC,AACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACjB,CAAC;AC3BD,YAAY,4BAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACrD,CAAC,AACD,0BAAY,CAAC,IAAI,cAAC,CAAC,AACf,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,AACvB,CAAC,AACD,IAAI,KAAK,4BAAC,CAAC,AACP,UAAU,CAAE,OAAO,AACvB,CAAC,AACD,IAAI,IAAI,4BAAC,CAAC,AACN,UAAU,CAAE,OAAO,AACvB,CAAC"
}